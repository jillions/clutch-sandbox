/* THIS FILE WAS AUTOGENERATED BY CLUTCH. DO NOT EDIT. */
import cx from "classnames";
import { getFrontPage as getFrontPageFn } from "../../../node_modules/@clutch-marketplace/clutch.wordpress/dist/queries/pages";
import * as pluginHook from "../../../node_modules/@clutch-marketplace/clutch.wordpress/dist/clutch.hooks.js";
import { ClientImage as ClutchClientImage } from "../../clutch/components/ClutchImage/client";
import { Button } from "@clutch-marketplace/clutch.clutch-elements/dist/components/Button/index.js";
import ApplyHooks from "../../clutch/components/ClutchApplyHooks";
import ClutchImage from "../../clutch/components/ClutchImage";
import ClutchRichText from "../../clutch/components/ClutchRichText";
import { serialize, parseSearchParams } from "../_debug/helpers";
import { DebugReports, DebugInstance, DebugInstanceErrorWrapper, DebugTextEdit } from "../_debug/components";
import styles from "./styles.module.css";
const pagePath = "/";
const pageSettings = {
  "wpTemplate": {
    "type": "front-page"
  },
  "pluginControlled": "@clutch-marketplace/clutch.wordpress"
};
const cltPluginsHooks = [
    pluginHook.HookPage
].filter(Boolean);
export default async function FrontPage({
    params,
    searchParams,
    ...props
}) {
    const [
        datagetFrontPage
    ] = await Promise.all([
        getFrontPageFn()
    ]);
    const vars = {
        "1648_16": {
            getFrontPage: datagetFrontPage
        }
    };
    const reports = [
        {
            type: 0,
            vars: serialize(vars),
            props: serialize({
                ...props,
                params: await params,
                searchParams: parseSearchParams(await searchParams)
            })
        }
    ];
    return (<ApplyHooks hooks={cltPluginsHooks} vars={vars["1648_16"]} pagePath={pagePath} pageSettings={pageSettings}>{(pluginsVars)=>{
        const newVars = {
            "1648_16": {
                ...pluginsVars
            }
        };
        const prevVars = vars;
        {
            const vars = {
                ...prevVars,
                ...newVars
            };
            reports[0]["vars"] = serialize(newVars);
            return (<DebugReports debug-reports={reports} debug-stop debug-id="1648_16"><DebugInstance debug-id="1648_16"><div data-d="1648_16" className={cx(styles.clt_1648_16, "clt_1648_16")}><DebugInstanceErrorWrapper data-d="1648_16#1_330"><header debug-is-section="true" className={cx(styles.clt_1_330, "clt_1_330")} data-d="1648_16#1_330"><DebugInstanceErrorWrapper data-d="1_330#1_331"><ClutchClientImage><ClutchImage src={vars?.["1648_16"]?.getFrontPage?.featured_media?.source_url} alt="Hero Image" className={cx(styles.clt_1_331, "clt_1_331")} data-d="1_330#1_331"/></ClutchClientImage></DebugInstanceErrorWrapper><DebugInstanceErrorWrapper data-d="1_330#1_332"><div className={cx(styles.clt_1_332, "clt_1_332")} data-d="1_330#1_332">{null}</div></DebugInstanceErrorWrapper><DebugInstanceErrorWrapper data-d="1_330#1_333"><div className={cx(styles.clt_1_333, "clt_1_333", "wrapper")} data-d="1_330#1_333"><DebugInstanceErrorWrapper data-d="1_333#1_334"><div className={cx(styles.clt_1_334, "clt_1_334", "container")} data-d="1_333#1_334"><DebugInstanceErrorWrapper data-d="1_334#1_340"><div className={cx(styles.clt_1_340, "clt_1_340")} data-d="1_334#1_340"><DebugInstanceErrorWrapper data-d="1_340#1_341"><ClutchRichText tag="h1" className={cx(styles.clt_1_341, "clt_1_341")} data-d="1_340#1_341">{vars?.["1648_16"]?.getFrontPage?.title}</ClutchRichText></DebugInstanceErrorWrapper><DebugInstanceErrorWrapper data-d="1_340#1_342"><ClutchRichText tag="p" className={cx(styles.clt_1_342, "clt_1_342", "large")} data-d="1_340#1_342">{vars?.["1648_16"]?.getFrontPage?.content}</ClutchRichText></DebugInstanceErrorWrapper></div></DebugInstanceErrorWrapper><DebugInstanceErrorWrapper data-d="1_334#1_335"><div className={cx(styles.clt_1_335, "clt_1_335")} data-d="1_334#1_335"><DebugInstanceErrorWrapper data-d="1_335#1_338"><DebugInstance debug-id="1_338" debug-parent="1_335"><Button href={`/jeter`} className={cx(styles.clt_1_338, "clt_1_338")}><DebugInstanceErrorWrapper data-d="1_338#1_339"><ClutchRichText className={cx(styles.clt_1_339, "clt_1_339")} data-d="1_338#1_339">{<DebugTextEdit data-d="1_339" data-name="text"><p dir="ltr"><b>Show Me a Clutch Athlete</b></p></DebugTextEdit>}</ClutchRichText></DebugInstanceErrorWrapper></Button></DebugInstance></DebugInstanceErrorWrapper></div></DebugInstanceErrorWrapper></div></DebugInstanceErrorWrapper></div></DebugInstanceErrorWrapper></header></DebugInstanceErrorWrapper></div></DebugInstance></DebugReports>);
        }
    }}</ApplyHooks>);
}
